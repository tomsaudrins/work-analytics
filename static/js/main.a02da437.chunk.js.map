{"version":3,"sources":["scripts/configureGraphs.js","components/Login.js","scripts/countLocation.js","components/Card.js","scripts/countTotalHours.js","components/InfoCards.js","scripts/getDay.js","scripts/countHours.js","scripts/days.js","components/Day.js","components/LastFiveDays.js","graphs/Location.js","graphs/WeekInfo.js","graphs/DayHours.js","components/Graphs.js","components/MenuItem.js","components/Menu.js","components/Dashboard.js","components/App.js","index.js"],"names":["defaults","font","family","size","color","scales","radialLinear","ticks","display","plugins","title","weight","Login","distance","setDistance","currency","setCurrency","importedData","setImportedData","salary","setSalary","selectFile","e","preventDefault","alert","d3","csv","csvData","reverse","className","htmlFor","type","id","value","onChange","target","onClick","countLocation","data","locationData","Office","Home","forEach","location","Card","name","body","countTotalHours","total","day","split","hours","minutes","InfoCards","countHours","salaryToDisplay","Math","round","distanceToWork","parseInt","holidayPay","getDay","date","Date","parse","join","days","Day","Icon","style","fontWeight","marginLeft","LastFiveDays","lastFiveDays","slice","map","props","key","FaHome","FaBuilding","Location","dataSet","labels","Object","keys","datasets","label","values","backgroundColor","borderWidth","options","maintainAspectRatio","indexAxis","responsive","legend","position","text","WeekInfo","dayCount","Monday","Tuesday","Wednesday","Thursday","Friday","fontFamily","fontStyle","DayHours","hourData","yAxes","backdropColor","z","Graphs","MenuItem","active","setData","timeframe","setActive","handleClick","innerText","Menu","useState","menuProps","Dashboard","App","updateSize","document","querySelector","window","innerWidth","getComputedStyle","height","getPropertyValue","useEffect","useLayoutEffect","clientWidth","addEventListener","removeEventListener","dashboardProps","loginProps","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a02da437.chunk.js","sourcesContent":["import { defaults } from \"react-chartjs-2\";\r\n\r\ndefaults.font.family = \"Poppins\";\r\ndefaults.font.size = 16;\r\ndefaults.color = \"#fff\";\r\ndefaults.scales.radialLinear.ticks.display = false;\r\ndefaults.plugins.title.font.weight = \"200\";\r\ndefaults.plugins.title.font.size = \"18px\";\r\n","import \"../css/Login.css\";\r\nimport d3 from \"d3\";\r\n\r\nconst Login = ({\r\n  distance,\r\n  setDistance,\r\n  currency,\r\n  setCurrency,\r\n  importedData,\r\n  setImportedData,\r\n  salary,\r\n  setSalary,\r\n}) => {\r\n  const selectFile = (e) => {\r\n    e.preventDefault();\r\n    if (!distance || !currency || !salary)\r\n      return alert(\"Please fill in all the fields\");\r\n\r\n    d3.csv(\"data.csv\", (csvData) => {\r\n      setImportedData(csvData.reverse());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <h2 className=\"header-info\">Data for calculations</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"distance\">Distance KM</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          id=\"distance\"\r\n          value={distance}\r\n          onChange={(e) => setDistance(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"distance\">Hourly salary</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          id=\"salary\"\r\n          value={salary}\r\n          onChange={(e) => setSalary(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"currency\">Currency</label>\r\n        <select\r\n          className=\"form-control\"\r\n          id=\"currency\"\r\n          value={currency}\r\n          onChange={(e) => setCurrency(e.target.value)}\r\n        >\r\n          <option></option>\r\n          <option>DKK</option>\r\n          <option>EUR</option>\r\n          <option>GBP</option>\r\n          <option>USD</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <button onClick={(e) => selectFile(e)} type=\"submit\">\r\n          {importedData ? \"File loaded!\" : \"Upload a file\"}\r\n        </button>\r\n        <button onClick={(e) => selectFile(e)} type=\"submit\">\r\n          Use sample data\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <h4 className=\"header\">Spreadsheet information</h4>\r\n        <p className=\"info\">\r\n          The file has to be a CSV file that contains the following columns:\r\n          <span className=\"info-columns\">\r\n            {\" \"}\r\n            Date, Start Time, End Time, Hours, Location.\r\n          </span>\r\n        </p>\r\n        <p className=\"info\">\r\n          Date format: <span className=\"info-columns\"> DD/MM/YYYY</span>\r\n          <br />\r\n          Start time, End time, and Hours:{\" \"}\r\n          <span className=\"info-columns\"> HH.MM</span>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const countLocation = (data) => {\r\n  let locationData = {\r\n    Office: 0,\r\n    Home: 0,\r\n  };\r\n  data.forEach((location) => locationData[location[\"Location\"]]++);\r\n  return locationData;\r\n};\r\n\r\nexport default countLocation;\r\n","import \"../css/Card.css\";\r\nimport \"../css/InfoCards.css\";\r\n\r\nconst Card = ({ name, body }) => {\r\n  return (\r\n    <div className=\"card-component\">\r\n      <h3 className=\"name\">{name}</h3>\r\n      <h4 className=\"body\">{body}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","const countTotalHours = (data) => {\r\n  let total = 0;\r\n  data.forEach((day) => {\r\n    let [hours, minutes] = day[\"Hours\"].split(\".\");\r\n    total += +hours + +minutes / 60;\r\n  });\r\n  return total;\r\n};\r\n\r\nexport default countTotalHours;\r\n","import countLocation from \"../scripts/countLocation\";\r\nimport Card from \"./Card\";\r\nimport countHours from \"../scripts/countTotalHours\";\r\nimport \"../css/InfoCards.css\";\r\n\r\nconst InfoCards = ({ data, currency, distance, salary }) => {\r\n  const hours = countHours(data);\r\n  const salaryToDisplay =\r\n    `${currency} ` + Math.round(countHours(data) * salary * 100) / 100;\r\n  const distanceToWork =\r\n    \"KM \" +\r\n    Math.round(countLocation(data)[\"Office\"] * parseInt(distance) * 2 * 100) /\r\n      100;\r\n  const holidayPay =\r\n    `${currency} ` + Math.round(countHours(data) * salary * 0.125 * 100) / 100;\r\n\r\n  return (\r\n    <div className=\"info-cards\">\r\n      <Card name=\"Total Hours\" body={hours} />\r\n      <Card name=\"Salary\" body={salaryToDisplay} />\r\n      <Card name=\"Holiday Pay\" body={holidayPay} />\r\n      <Card name=\"Distance Cycled\" body={distanceToWork} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCards;\r\n","const getDay = (date) => {\r\n  return (\r\n    new Date(\r\n      Date.parse(date[\"Date\"].split(\"/\").reverse().join(\"-\") + \"T10:00:00\")\r\n    ).getDay() - 1\r\n  );\r\n};\r\n\r\nexport default getDay;\r\n","const countHours = (day) => {\r\n  let total = 0;\r\n  let [hours, minutes] = day[\"Hours\"].split(\".\");\r\n  total += +hours + +minutes / 60;\r\n  return total;\r\n};\r\n\r\nexport default countHours;\r\n","const days = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturtday\",\r\n  \"Sunday\",\r\n];\r\n\r\nexport default days;\r\n","import getDay from \"../scripts/getDay\";\r\nimport countHours from \"../scripts/countHours\";\r\nimport days from \"../scripts/days\";\r\nimport \"../css/Day.css\";\r\nconst Day = ({ Icon, day }) => {\r\n  return (\r\n    <div className=\"day\" key={day[\"Date\"]}>\r\n      <h3 style={{ fontWeight: 100 }}>\r\n        <Icon />\r\n        <span style={{ marginLeft: \"5px\" }}>{days[getDay(day)]}</span>\r\n        <span className=\"hours\">{countHours(day)} hr</span>\r\n      </h3>\r\n      <p>\r\n        {day[\"Start Time\"]} - {day[\"End Time\"]}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { FaHome, FaBuilding } from \"react-icons/fa\";\r\nimport Day from \"./Day\";\r\nimport \"../css/LastFiveDays.css\";\r\n\r\nconst LastFiveDays = ({ data }) => {\r\n  let lastFiveDays = data.slice(0, 5);\r\n\r\n  return (\r\n    <div className=\"lastFiveDays\">\r\n      <h3>Last Five Work Days</h3>\r\n      {lastFiveDays.map((day) => {\r\n        const props = {\r\n          key: day[\"Date\"],\r\n          day: day,\r\n          Icon: day[\"Location\"] === \"Home\" ? FaHome : FaBuilding,\r\n        };\r\n        return <Day {...props} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default LastFiveDays;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport countLocation from \"../scripts/countLocation\";\r\nimport \"../css/grid.css\";\r\nconst Location = ({ data }) => {\r\n  const locationData = countLocation(data);\r\n  const dataSet = {\r\n    labels: Object.keys(locationData),\r\n    datasets: [\r\n      {\r\n        label: \"Location informaton\",\r\n        data: Object.values(locationData),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n            weight: \"100\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Work location\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"locationInfo info-grid-one\">\r\n      <Doughnut data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\nexport default Location;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"../css/grid.css\";\r\nimport getDay from \"../scripts/getDay\";\r\n\r\nconst WeekInfo = ({ data }) => {\r\n  const dayCount = {\r\n    Monday: 0,\r\n    Tuesday: 0,\r\n    Wednesday: 0,\r\n    Thursday: 0,\r\n    Friday: 0,\r\n  };\r\n\r\n  data.forEach((date) => {\r\n    let day = getDay(date);\r\n    dayCount[Object.keys(dayCount)[day]]++;\r\n  });\r\n\r\n  const dataSet = {\r\n    labels: Object.keys(dayCount),\r\n    datasets: [\r\n      {\r\n        data: Object.values(dayCount),\r\n        label: \"Days worked\",\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Day distribution\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"italic\",\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"weekInfo info-grid-two\">\r\n      <Bar data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekInfo;\r\n","import React from \"react\";\r\nimport { PolarArea } from \"react-chartjs-2\";\r\nimport \"../css/grid.css\";\r\nimport getDay from \"../scripts/getDay\";\r\nimport countHours from \"../scripts/countHours\";\r\n\r\nconst DayHours = ({ data }) => {\r\n  const hourData = {\r\n    Monday: 0,\r\n    Tuesday: 0,\r\n    Wednesday: 0,\r\n    Thursday: 0,\r\n    Friday: 0,\r\n  };\r\n\r\n  data.forEach((date) => {\r\n    let day = getDay(date);\r\n    hourData[Object.keys(hourData)[day]] += countHours(date);\r\n  });\r\n\r\n  const dataSet = {\r\n    labels: Object.keys(hourData),\r\n    datasets: [\r\n      {\r\n        data: Object.values(hourData),\r\n\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: {\r\n        display: false,\r\n        ticks: {\r\n          color: \"red\",\r\n          display: false,\r\n          backdropColor: \"#27293d\",\r\n          z: 1000,\r\n        },\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n            weight: \"100\",\r\n            color: \"red\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Hour distribution\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"dayHoursInfo info-grid-two\">\r\n      <PolarArea data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayHours;\r\n","import InfoCards from \"./InfoCards\";\r\nimport LastFiveDays from \"./LastFiveDays\";\r\nimport Location from \"../graphs/Location\";\r\nimport WeekInfo from \"../graphs/WeekInfo\";\r\nimport DayHours from \"../graphs/DayHours\";\r\nimport \"../css/Graphs.css\";\r\n\r\nconst Graphs = (props) => {\r\n  return (\r\n    <div className=\"graphs\">\r\n      <InfoCards {...props} />\r\n      <div className=\"row\">\r\n        <Location data={props.data} />\r\n        <DayHours data={props.data} />\r\n        <WeekInfo data={props.data} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <LastFiveDays data={props.data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","const MenuItem = ({\r\n  text,\r\n  active,\r\n  setImportedData,\r\n  importedData,\r\n  setData,\r\n  timeframe,\r\n  setActive,\r\n}) => {\r\n  const logout = () => {\r\n    setData(null);\r\n    setImportedData(null);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setActive(e.target.innerText);\r\n    timeframe > 0 ? setData(importedData.slice(0, timeframe)) : logout();\r\n  };\r\n\r\n  const className = active === text ? \"active\" : \"\";\r\n\r\n  return (\r\n    <p className={className} onClick={(e) => handleClick(e)}>\r\n      {text}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import \"../css/Menu.css\";\r\nimport { FaChartBar } from \"react-icons/fa\";\r\nimport { useState } from \"react\";\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nconst Menu = (props) => {\r\n  const [active, setActive] = useState(\"Week\");\r\n  const menuProps = { ...props, active, setActive };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <p className=\"logo\">\r\n        <FaChartBar />\r\n      </p>\r\n\r\n      <MenuItem {...menuProps} timeframe=\"7\" text=\"Week\" />\r\n      <MenuItem {...menuProps} timeframe=\"30\" text=\"Month\" />\r\n      <MenuItem {...menuProps} timeframe=\"365\" text=\"Year\" />\r\n      <MenuItem {...menuProps} timeframe=\"0\" text=\"Logout\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import Graphs from \"./Graphs\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst Dashboard = ({\r\n  data,\r\n  setData,\r\n  importedData,\r\n  currency,\r\n  distance,\r\n  salary,\r\n  setImportedData,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Menu\r\n        onClick={setData}\r\n        setImportedData={setImportedData}\r\n        importedData={importedData}\r\n        setData={setData}\r\n      />\r\n      <div className=\"content\">\r\n        {data ? (\r\n          <Graphs\r\n            data={data}\r\n            currency={currency}\r\n            distance={distance}\r\n            salary={salary}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import \"../scripts/configureGraphs.js\";\r\nimport { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst App = () => {\r\n  const [importedData, setImportedData] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [distance, setDistance] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setData(importedData ? importedData.slice(0, 7) : null);\r\n  }, [importedData]);\r\n  function updateSize() {\r\n    if (document.querySelector(\".content\") && window.innerWidth > 700) {\r\n      var style = window.getComputedStyle(\r\n        document.querySelector(\".content\"),\r\n        null\r\n      );\r\n      document.querySelector(\".sidebar\").style.height =\r\n        style.getPropertyValue(\"height\");\r\n    }\r\n  }\r\n  useLayoutEffect(() => {\r\n    if (document.querySelector(\".App\").clientWidth > 700) {\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n    } else {\r\n      window.removeEventListener(\"resize\", updateSize);\r\n    }\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, [data]);\r\n\r\n  const dashboardProps = {\r\n    data,\r\n    setData,\r\n    importedData,\r\n    currency,\r\n    distance,\r\n    salary,\r\n    setSalary,\r\n    setImportedData,\r\n  };\r\n  const loginProps = {\r\n    distance,\r\n    setDistance,\r\n    currency,\r\n    importedData,\r\n    setImportedData,\r\n    setCurrency,\r\n    salary,\r\n    setSalary,\r\n  };\r\n\r\n  console.log(importedData);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {data && distance && salary && currency ? (\r\n        <Dashboard {...dashboardProps} />\r\n      ) : (\r\n        <Login {...loginProps} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}