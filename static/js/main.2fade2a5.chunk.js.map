{"version":3,"sources":["components/OptionCard.js","scripts/countLocation.js","graphs/Location.js","graphs/WeekInfo.js","graphs/DayHours.js","components/Menu.js","components/Card.js","scripts/countTotalHours.js","components/InfoCards.js","scripts/getDay.js","scripts/countHours.js","components/Day.js","components/LastFiveDays.js","components/App.js","index.js"],"names":["OptionCard","title","button_text","onClick","className","countLocation","data","locationData","Office","Home","forEach","location","Location","dataSet","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","indexAxis","responsive","plugins","legend","position","font","family","weight","display","text","WeekInfo","dayCount","Monday","Tuesday","Wednesday","Thursday","Friday","date","day","Date","split","reverse","getDay","fontFamily","fontStyle","DayHours","hourData","calculateHours","scales","yAxes","ticks","color","backdropColor","z","Menu","style","height","fontSize","paddingTop","href","Card","name","body","fontWeight","countTotalHours","total","hours","minutes","InfoCards","countHours","Math","round","days","Day","Icon","marginLeft","float","marginTop","LastFiveDays","lastFiveDays","slice","map","FaHome","FaBuilding","App","defaults","size","radialLinear","useState","setData","width","margin","d3","csv","csvData","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fade2a5.chunk.js","sourcesContent":["import \"../css/OptionCard.css\";\r\n\r\nconst OptionCard = ({ title, button_text, onClick }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h2 className=\"card-header\">{title}</h2>\r\n      <button className=\"select-button\" onClick={onClick}>\r\n        {button_text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionCard;\r\n","const countLocation = (data) => {\r\n  let locationData = {\r\n    Office: 0,\r\n    Home: 0,\r\n  };\r\n  data.forEach((location) => locationData[location[\"Location\"]]++);\r\n  return locationData;\r\n};\r\n\r\nexport default countLocation;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport countLocation from \"../scripts/countLocation\";\r\nimport \"../css/grid.css\";\r\nconst Location = ({ data }) => {\r\n  const locationData = countLocation(data);\r\n  const dataSet = {\r\n    labels: Object.keys(locationData),\r\n    datasets: [\r\n      {\r\n        label: \"Location informaton\",\r\n        data: Object.values(locationData),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n            weight: \"100\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: \"Weekly hour distribution\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"locationInfo info-grid-one\">\r\n      <Doughnut data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\nexport default Location;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"../css/grid.css\";\r\nconst WeekInfo = ({ data }) => {\r\n  const dayCount = {\r\n    // set sample values to zero in production\r\n    Monday: 5,\r\n    Tuesday: 5,\r\n    Wednesday: 5,\r\n    Thursday: 5,\r\n    Friday: 5,\r\n  };\r\n\r\n  data.forEach((date) => {\r\n    let day = new Date(date[\"Date\"].split(\"/\").reverse()).getDay();\r\n    //console.log(day);\r\n    dayCount[Object.keys(dayCount)[day - 1]]++;\r\n  });\r\n\r\n  const dataSet = {\r\n    labels: Object.keys(dayCount),\r\n    datasets: [\r\n      {\r\n        data: Object.values(dayCount),\r\n        label: \"Days worked\",\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: \"Weekly day distribution\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"italic\",\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"weekInfo info-grid-two\">\r\n      <Bar data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekInfo;\r\n","import React from \"react\";\r\nimport { PolarArea } from \"react-chartjs-2\";\r\nimport \"../css/grid.css\";\r\n\r\nconst calculateHours = (day) => {\r\n  let [hours, minutes] = day[\"Hours\"].split(\":\");\r\n  return +hours + +minutes / 60;\r\n};\r\n\r\nconst DayHours = ({ data }) => {\r\n  const hourData = {\r\n    // set sample values to zero in production\r\n    Monday: 5,\r\n    Tuesday: 7,\r\n    Wednesday: 4,\r\n    Thursday: 5,\r\n    Friday: 8,\r\n  };\r\n\r\n  data.forEach((date) => {\r\n    let day = new Date(date[\"Date\"].split(\"/\").reverse()).getDay();\r\n    hourData[Object.keys(hourData)[day - 1]] += calculateHours(date);\r\n  });\r\n\r\n  const dataSet = {\r\n    labels: Object.keys(hourData),\r\n    datasets: [\r\n      {\r\n        data: Object.values(hourData),\r\n\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n          \r\n        ],\r\n        \r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n        yAxes: {\r\n          display: false,\r\n          ticks: {\r\n            color: \"red\",\r\n            display: false,\r\n            backdropColor: \"#27293d\",\r\n            z:1000,\r\n          }\r\n        },\r\n        \r\n    },\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n            weight: \"100\",\r\n            color: \"red\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: \"Weekly hour distribution\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"dayHoursInfo info-grid-two\">\r\n      <PolarArea data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayHours;\r\n","import \"../css/Menu.css\";\r\nimport { FaChartBar } from \"react-icons/fa\";\r\nconst Menu = ({ onClick }) => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <p style={{ height: \"44px\", fontSize: \"28px\", paddingTop: \"25px\", color: \"white\" }}>\r\n        <FaChartBar />\r\n      </p>\r\n      <a href=\"#main\">Week</a>\r\n      <a href=\"#news\">Month</a>\r\n      <a href=\"#contact\">Year</a>\r\n      <a href=\"#contact\">Total</a>\r\n      <a href=\"#about\" onClick={() => onClick(null)}>\r\n        Logout\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import \"../css/Card.css\";\r\nconst Card = ({ name, body }) => {\r\n  return (\r\n    <div className=\"card-component\">\r\n      <h3 style={{}}>{name}</h3>\r\n      <h4 style={{ fontWeight: 300 }}>{body}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","const countTotalHours = (data) => {\r\n  let total = 0;\r\n  data.forEach((day) => {\r\n    let [hours, minutes] = day[\"Hours\"].split(\":\");\r\n    total += +hours + +minutes / 60;\r\n  });\r\n  return total;\r\n};\r\n\r\nexport default countTotalHours;\r\n","import countLocation from \"../scripts/countLocation\";\r\nimport Card from \"./Card\";\r\nimport countHours from \"../scripts/countTotalHours\";\r\nimport \"../css/InfoCards.css\";\r\nconst InfoCards = ({ data }) => {\r\n  return (\r\n    <div className=\"info-cards\">\r\n      <Card name=\"Total Hours\" body={countHours(data)} />\r\n      <Card\r\n        name=\"Salary\"\r\n        body={\"DKK \" + Math.round(countHours(data) * 145 * 100) / 100}\r\n      />\r\n\r\n      <Card\r\n        name=\"Holiday Pay\"\r\n        body={\"DKK \" + Math.round(countHours(data) * 145 * 0.125 * 100) / 100}\r\n      />\r\n\r\n      <Card\r\n        name=\"Distance Cycled\"\r\n        body={\r\n          \"KM \" + Math.round(countLocation(data)[\"Office\"] * 12.2 * 100) / 100\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCards;\r\n","const days = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturtday\",\r\n  \"Sunday\",\r\n];\r\nconst getDay = (date) => {\r\n  return days[new Date(date[\"Date\"].split(\"/\").reverse()).getDay()];\r\n};\r\n\r\nexport default getDay;\r\n","const countHours = (day) => {\r\n  let total = 0;\r\n  let [hours, minutes] = day[\"Hours\"].split(\":\");\r\n  total += +hours + +minutes / 60;\r\n  return total;\r\n};\r\n\r\nexport default countHours;\r\n","import getDay from \"../scripts/getDay\";\r\nimport countHours from \"../scripts/countHours\";\r\nimport \"../css/Day.css\";\r\nconst Day = ({ Icon, day }) => {\r\n  return (\r\n    <div className=\"day\" key={day[\"Date\"]}>\r\n      <h3 style={{ fontWeight: 100 }}>\r\n        <Icon />\r\n        <span style={{ marginLeft: \"5px\" }}>{getDay(day)}</span>\r\n        <span\r\n          style={{\r\n            marginLeft: \"5px\",\r\n            float: \"right\",\r\n            fontSize: \"20px\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          {countHours(day)} hr\r\n        </span>\r\n      </h3>\r\n      <p>\r\n        {day[\"Start time\"]} - {day[\"End Time\"]}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { FaHome, FaBuilding } from \"react-icons/fa\";\r\nimport Day from \"./Day\";\r\nimport \"../css/LastFiveDays.css\";\r\nconst LastFiveDays = ({ data }) => {\r\n  let lastFiveDays = data.reverse().slice(0, 5);\r\n  return (\r\n    <div className=\"lastFiveDays\">\r\n      <h3>Last Five Work Days</h3>\r\n      {lastFiveDays.map((day) => {\r\n        return (\r\n          <Day\r\n            key={day[\"Date\"]}\r\n            day={day}\r\n            Icon={day[\"Location\"] === \"Home\" ? FaHome : FaBuilding}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default LastFiveDays;\r\n","import OptionCard from \"./OptionCard\";\r\nimport Location from \"../graphs/Location\";\r\nimport d3 from \"d3\";\r\nimport { useState } from \"react\";\r\nimport WeekInfo from \"../graphs/WeekInfo\";\r\nimport DayHours from \"../graphs/DayHours\";\r\nimport Menu from \"./Menu\";\r\nimport InfoCards from \"./InfoCards\";\r\nimport LastFiveDays from \"./LastFiveDays\";\r\nimport { defaults } from \"react-chartjs-2\";\r\n\r\nconst App = () => {\r\n  // move to other location later\r\n  defaults.font.family = \"Poppins\";\r\n  defaults.font.size = 16;\r\n  defaults.color = \"#fff\";\r\n  defaults.scales.radialLinear.ticks.display = false\r\n\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  const selectFile = () => {\r\n    d3.csv(\"data.csv\", (csvData) => {\r\n      setData(csvData);\r\n      console.log(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Menu onClick={setData} />\r\n      <div className=\"content\">\r\n        <div style={{ display: \"block\", width: \"100%\", margin: \"0 auto\" }}>\r\n          {data ? (\r\n            \"\"\r\n          ) : (\r\n            <OptionCard\r\n              title=\"Upload a new file\"\r\n              button_text=\"Select file...\"\r\n              onClick={selectFile}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"graphs\">\r\n          {data ? <InfoCards data={data} /> : \"\"}\r\n\r\n          <div className=\"row\">\r\n            {data ? <Location data={data} /> : \"\"}\r\n            {data ? <DayHours data={data} /> : \"\"}\r\n            {data ? <WeekInfo data={data} /> : \"\"}\r\n          </div>\r\n          <div className=\"row\">{data ? <LastFiveDays data={data} /> : \"\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}