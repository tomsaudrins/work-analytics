{"version":3,"sources":["scripts/configureGraphs.js","components/OptionCard.js","scripts/countLocation.js","components/Card.js","scripts/countTotalHours.js","components/InfoCards.js","scripts/getDay.js","scripts/countHours.js","components/Day.js","components/LastFiveDays.js","graphs/Location.js","graphs/WeekInfo.js","graphs/DayHours.js","components/Graphs.js","components/MenuItem.js","components/Menu.js","components/Dashboard.js","components/App.js","index.js"],"names":["defaults","font","family","size","color","scales","radialLinear","ticks","display","plugins","title","weight","OptionCard","text","onClick","className","countLocation","data","locationData","Office","Home","forEach","location","Card","name","body","style","fontWeight","countTotalHours","total","day","split","hours","minutes","InfoCards","countHours","salary","Math","round","distance","holidayPay","days","getDay","date","Date","reverse","Day","Icon","marginLeft","LastFiveDays","lastFiveDays","slice","map","FaHome","FaBuilding","Location","dataSet","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","indexAxis","responsive","legend","position","WeekInfo","dayCount","Monday","Tuesday","Wednesday","Thursday","Friday","fontFamily","fontStyle","DayHours","hourData","calculateHours","yAxes","backdropColor","z","Graphs","MenuItem","active","importedData","setData","timeframe","setActive","e","target","innerText","handleClick","Menu","useState","itemProps","Dashboard","App","setImportedData","useEffect","dashboardProps","optionCardProps","d3","csv","csvData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.820e4578.chunk.js","sourcesContent":["import { defaults } from \"react-chartjs-2\";\r\n\r\ndefaults.font.family = \"Poppins\";\r\ndefaults.font.size = 16;\r\ndefaults.color = \"#fff\";\r\ndefaults.scales.radialLinear.ticks.display = false;\r\ndefaults.plugins.title.font.weight = \"200\";\r\n","import \"../css/OptionCard.css\";\r\n\r\nconst OptionCard = ({ title, text, onClick }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h2 className=\"card-header\">{title}</h2>\r\n      <button className=\"select-button\" onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionCard;\r\n","const countLocation = (data) => {\r\n  let locationData = {\r\n    Office: 0,\r\n    Home: 0,\r\n  };\r\n  data.forEach((location) => locationData[location[\"Location\"]]++);\r\n  return locationData;\r\n};\r\n\r\nexport default countLocation;\r\n","import \"../css/Card.css\";\r\nconst Card = ({ name, body }) => {\r\n  return (\r\n    <div className=\"card-component\">\r\n      <h3 style={{}}>{name}</h3>\r\n      <h4 style={{ fontWeight: 300 }}>{body}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","const countTotalHours = (data) => {\r\n  let total = 0;\r\n  data.forEach((day) => {\r\n    let [hours, minutes] = day[\"Hours\"].split(\":\");\r\n    total += +hours + +minutes / 60;\r\n  });\r\n  return total;\r\n};\r\n\r\nexport default countTotalHours;\r\n","import countLocation from \"../scripts/countLocation\";\r\nimport Card from \"./Card\";\r\nimport countHours from \"../scripts/countTotalHours\";\r\nimport \"../css/InfoCards.css\";\r\n\r\nconst InfoCards = ({ data }) => {\r\n  const hours = countHours(data);\r\n  const salary = \"DKK \" + Math.round(countHours(data) * 145 * 100) / 100;\r\n  const distance =\r\n    \"KM \" + Math.round(countLocation(data)[\"Office\"] * 12.2 * 100) / 100;\r\n  const holidayPay =\r\n    \"DKK \" + Math.round(countHours(data) * 145 * 0.125 * 100) / 100;\r\n\r\n  return (\r\n    <div className=\"info-cards\">\r\n      <Card name=\"Total Hours\" body={hours} />\r\n      <Card name=\"Salary\" body={salary} />\r\n      <Card name=\"Holiday Pay\" body={holidayPay} />\r\n      <Card name=\"Distance Cycled\" body={distance} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCards;\r\n","const days = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturtday\",\r\n  \"Sunday\",\r\n];\r\n\r\nconst getDay = (date) => {\r\n  return days[new Date(date[\"Date\"].split(\"/\").reverse()).getDay() - 1];\r\n};\r\n\r\nexport default getDay;\r\n","const countHours = (day) => {\r\n  let total = 0;\r\n  let [hours, minutes] = day[\"Hours\"].split(\":\");\r\n  total += +hours + +minutes / 60;\r\n  return total;\r\n};\r\n\r\nexport default countHours;\r\n","import getDay from \"../scripts/getDay\";\r\nimport countHours from \"../scripts/countHours\";\r\nimport \"../css/Day.css\";\r\n\r\nconst Day = ({ Icon, day }) => {\r\n  return (\r\n    <div className=\"day\" key={day[\"Date\"]}>\r\n      <h3 style={{ fontWeight: 100 }}>\r\n        <Icon />\r\n        <span style={{ marginLeft: \"5px\" }}>{getDay(day)}</span>\r\n        <span className=\"hours\">{countHours(day)} hr</span>\r\n      </h3>\r\n      <p>\r\n        {day[\"Start time\"]} - {day[\"End Time\"]}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { FaHome, FaBuilding } from \"react-icons/fa\";\r\nimport Day from \"./Day\";\r\nimport \"../css/LastFiveDays.css\";\r\n\r\nconst LastFiveDays = ({ data }) => {\r\n  let lastFiveDays = data.slice(0, 5);\r\n  return (\r\n    <div className=\"lastFiveDays\">\r\n      <h3>Last Five Work Days</h3>\r\n      {lastFiveDays.map((day) => {\r\n        return (\r\n          <Day\r\n            key={day[\"Date\"]}\r\n            day={day}\r\n            Icon={day[\"Location\"] === \"Home\" ? FaHome : FaBuilding}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default LastFiveDays;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport countLocation from \"../scripts/countLocation\";\r\nimport \"../css/grid.css\";\r\nconst Location = ({ data }) => {\r\n  const locationData = countLocation(data);\r\n  const dataSet = {\r\n    labels: Object.keys(locationData),\r\n    datasets: [\r\n      {\r\n        label: \"Location informaton\",\r\n        data: Object.values(locationData),\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n            weight: \"100\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Work location\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"locationInfo info-grid-one\">\r\n      <Doughnut data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\nexport default Location;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"../css/grid.css\";\r\nconst WeekInfo = ({ data }) => {\r\n  const dayCount = {\r\n    Monday: 0,\r\n    Tuesday: 0,\r\n    Wednesday: 0,\r\n    Thursday: 0,\r\n    Friday: 0,\r\n  };\r\n\r\n  data.forEach((date) => {\r\n    let day = new Date(date[\"Date\"].split(\"/\").reverse()).getDay();\r\n    dayCount[Object.keys(dayCount)[day - 1]]++;\r\n  });\r\n\r\n  const dataSet = {\r\n    labels: Object.keys(dayCount),\r\n    datasets: [\r\n      {\r\n        data: Object.values(dayCount),\r\n        label: \"Days worked\",\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Day distribution\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"italic\",\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"weekInfo info-grid-two\">\r\n      <Bar data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekInfo;\r\n","import React from \"react\";\r\nimport { PolarArea } from \"react-chartjs-2\";\r\nimport \"../css/grid.css\";\r\n\r\nconst calculateHours = (day) => {\r\n  let [hours, minutes] = day[\"Hours\"].split(\":\");\r\n  return +hours + +minutes / 60;\r\n};\r\n\r\nconst DayHours = ({ data }) => {\r\n  const hourData = {\r\n    Monday: 0,\r\n    Tuesday: 0,\r\n    Wednesday: 0,\r\n    Thursday: 0,\r\n    Friday: 0,\r\n  };\r\n\r\n  data.forEach((date) => {\r\n    let day = new Date(date[\"Date\"].split(\"/\").reverse()).getDay();\r\n    hourData[Object.keys(hourData)[day - 1]] += calculateHours(date);\r\n  });\r\n\r\n  const dataSet = {\r\n    labels: Object.keys(hourData),\r\n    datasets: [\r\n      {\r\n        data: Object.values(hourData),\r\n\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n        ],\r\n\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: {\r\n        display: false,\r\n        ticks: {\r\n          color: \"red\",\r\n          display: false,\r\n          backdropColor: \"#27293d\",\r\n          z: 1000,\r\n        },\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    indexAxis: \"y\",\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          font: {\r\n            family: \"Poppins\",\r\n            weight: \"100\",\r\n            color: \"red\",\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Hour distribution\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"dayHoursInfo info-grid-two\">\r\n      <PolarArea data={dataSet} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayHours;\r\n","import InfoCards from \"./InfoCards\";\r\nimport LastFiveDays from \"./LastFiveDays\";\r\nimport Location from \"../graphs/Location\";\r\nimport WeekInfo from \"../graphs/WeekInfo\";\r\nimport DayHours from \"../graphs/DayHours\";\r\n\r\nconst Graphs = ({ data }) => {\r\n  return (\r\n    <div className=\"graphs\">\r\n      <InfoCards data={data} />\r\n      <div className=\"row\">\r\n        <Location data={data} />\r\n        <DayHours data={data} />\r\n        <WeekInfo data={data} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <LastFiveDays data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","const MenuItem = ({\r\n  text,\r\n  active,\r\n  importedData,\r\n  setData,\r\n  timeframe,\r\n  setActive,\r\n}) => {\r\n  const handleClick = (e) => {\r\n    setActive(e.target.innerText);\r\n    timeframe > 0 ? setData(importedData.slice(0, timeframe)) : setData(null);\r\n  };\r\n\r\n  const className = active === text ? \"active\" : \"\";\r\n\r\n  return (\r\n    <p className={className} onClick={(e) => handleClick(e)}>\r\n      {text}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import \"../css/Menu.css\";\r\nimport { FaChartBar } from \"react-icons/fa\";\r\nimport { useState } from \"react\";\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nconst Menu = ({ importedData, setData }) => {\r\n  const [active, setActive] = useState(\"Week\");\r\n  const itemProps = {\r\n    active,\r\n    setData,\r\n    importedData,\r\n    setActive,\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <p className=\"logo\">\r\n        <FaChartBar />\r\n      </p>\r\n\r\n      <MenuItem {...itemProps} timeframe=\"7\" text=\"Week\" />\r\n      <MenuItem {...itemProps} timeframe=\"30\" text=\"Month\" />\r\n      <MenuItem {...itemProps} timeframe=\"365\" text=\"Year\" />\r\n      <MenuItem {...itemProps} timeframe=\"0\" text=\"Logout\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import Graphs from \"./Graphs\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst Dashboard = ({ data, setData, importedData }) => {\r\n  return (\r\n    <>\r\n      <Menu onClick={setData} importedData={importedData} setData={setData} />\r\n      <div className=\"content\">{data ? <Graphs data={data} /> : \"\"}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import d3 from \"d3\";\r\nimport \"../scripts/configureGraphs.js\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport OptionCard from \"./OptionCard\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst App = () => {\r\n  const [importedData, setImportedData] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  const selectFile = () => {\r\n    d3.csv(\"data.csv\", (csvData) => {\r\n      setImportedData(csvData.reverse());\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(importedData ? importedData.slice(0, 7) : null);\r\n  }, [importedData]);\r\n\r\n  const dashboardProps = { data, setData, importedData };\r\n  const optionCardProps = {\r\n    text: \"Upload..\",\r\n    onClick: selectFile,\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {data ? (\r\n        <Dashboard {...dashboardProps} />\r\n      ) : (\r\n        <OptionCard {...optionCardProps} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}